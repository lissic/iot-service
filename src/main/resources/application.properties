spring.application.name=netservice
server.servlet.context-path=/netservice
server.address=0.0.0.0
server.port = 8180

#SSL
#server.port=444
#server.ssl.enabled=true
#server.ssl.key-store-type=PKCS12
#server.ssl.key-store=classpath:ssl/localhost.p12
#server.ssl.key-store-password=changeit
#server.ssl.key-alias=netservice

#Datasource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.63.3:3306/netservice?characterEncoding=utf8&serverTimezone=GMT%2B8&tinyInt1isBit=false
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
mybatis-plus.mapper-locations=classpath*:com/hlytec/cloud/mapper/**/*Mapper.xml
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.global-config.banner=false
#spring.flyway.clean-disabled=true
#spring.flyway.baseline-on-migrate=true
#spring.flyway.locations=classpath:db/
spring.flyway.enabled=false

#连接池的设置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量 maxIdle已经不再使用
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.druid.min-evictable-idle-time-millis=30000
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
#是否缓存preparedStatement,mysql5.5+建议开启
spring.datasource.druid.pool-prepared-statements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置扩展插件
spring.datasource.druid.filters=stat,wall
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
#是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
spring.datasource.druid.stat-view-servlet.enabled=true
# 监控后台账号和密码
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin

#mail
spring.mail.host=smtp.qq.com
spring.mail.username=190998853@qq.com
spring.mail.password=igquyckkpaelcadb
spring.mail.from=System

#配置rabbitMq
spring.rabbitmq.host=192.168.63.3
spring.rabbitmq.port=5672
spring.rabbitmq.username=root
spring.rabbitmq.password=root

#mqtt
spring.mqtt.username=root
spring.mqtt.password=root
spring.mqtt.url=tcp://192.168.63.3:1883
spring.mqtt.default.topic=mqtt-test,/ToSer/RYX/0_Login,/ToSer/RYX/1_SetAppIpPort,\
/ToSer/RYX/2_ReportBatteryBasicInfo,/ToSer/RYX/3_ReportBatteryEventInfo,\
/ToSer/RYX/4_GetBatteryBasicInfo,/ToSer/RYX/5_GetBatteryCfgInfo,\
/ToSer/RYX/6_SetBatteryFieldParam,/ToSer/RYX/7_SetBatteryTemperatureParam,\
/ToSer/RYX/8_SetBatteryChargingParam,/ToSer/RYX/9_SetBatteryTimerParam,\
/ToSer/RYX/a_SetBatteryConfirmCapacityParam,/ToSer/RYX/b_StartBatteryConfirmCapacity
spring.mqtt.completionTimeout=3000

#文件服务器配置
minio.endpoint=https://192.168.63.3
minio.port=9000
minio.accessKey=minio
minio.secretKey=minio123
minio.secure=true
minio.bucketName="netservice"
minio.configDir="/usr/local/minio/data/"

#token 配置
spring.sa-token.token-name=token
#token有效期，单位s 默认30天, -1代表永不过期
spring.sa-token.timeout=2592000
#token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
spring.sa-token.activity-timeout=-1
#是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
spring.sa-token.allow-concurrent-login=false
#在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
spring.sa-token.is-share=false
spring.sa-token.token-style=simple-uuid
#是否输出操作日志
spring.sa-token.is-log=false
spring.sa-token.is-v=false

#influxDb
spring.influx.url=http://192.168.63.3:8086
spring.influx.user=root
spring.influx.password=root
spring.influx.database=iot
spring.influx.retentionPolicy=""

#文件上传大小
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
